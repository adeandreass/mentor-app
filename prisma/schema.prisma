generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum UserRole {
  USER
  ADMIN
  TEACHER
}

model User {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String          @unique
  phone          String
  emailVerified  DateTime?
  image          String?
  role           UserRole        @default(USER)
  plan           String?
  password       String
  accounts       Account[]
  sessions       Session[]
  teacherProfile TeacherProfile?
  isVerfied      Boolean         @default(false)
  token          Int
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model TeacherProfile {
  id                     String    @id @default(auto()) @map("_id") @db.ObjectId
  userId                 String    @unique @db.ObjectId
  user                   User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  trackingNumber         String    @unique
  firstName              String
  lastName               String
  middleName             String?
  dob                    DateTime?
  gender                 String
  page                   String
  profilePicture         String?
  bio                    String?
  teacherLicense         String?
  teacherLicenseExpiry   DateTime?
  yearsOfExperience      Int?
  email                  String?
  phone                  String?
  country                String?
  city                   String?
  state                  String?
  educationSchool        String?
  graduationYear         String?
  primarySpecalization   String?
  otherSpecalities       String[]
  boardCertificates      String[]
  schoolName             String?
  schoolAddress          String?
  schoolContactNumber    String?
  schoolEmailAddress     String?
  schollWebsite          String?
  schoolHoursOfOperation Int?
  servicedOffered        String[]
  insuranceAccepted      String?
  educationHistory       String?
  research               String?
  accomplishments        String?
  additionalDocs         String[]
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
}
